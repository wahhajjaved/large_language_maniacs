WRONG_FUNCTION_NAME

Base entry results
em_score = base_entry_results['em_score']=0.00
bleu_score = base_entry_results['bleu_score']=0.92
codebleu_result = base_entry_results['codebleu_result']=0.92
levenshtein_distance = base_entry_results['levenshtein_distance']=33.00
levenshtein_ratio = base_entry_results['levenshtein_ratio']=0.98
Fine tuned entry results
em_score = finetuned_entry_results['em_score']=0.00
bleu_score = finetuned_entry_results['bleu_score']=0.98
codebleu_result = finetuned_entry_results['codebleu_result']=0.94
levenshtein_distance = finetuned_entry_results['levenshtein_distance']=2.00
levenshtein_ratio = finetuned_entry_results['levenshtein_ratio']=1.00
####################
	Base Input
####################
def get_stats_from_forwarder(forwarder_address="http://34.207.74.221:8080"):
    """ Get stats from the forwarder
    """
    app.logger.debug(f"Getting stats from forwarder")
    try:
        r = requests.get(forwarder_address + '/map.csv')
        if r.status_code != 200:
            response = {'status': 'Failed',
                        'code': r.status_code,
                        'reason': 'Forwarder did not respond with liveness stats'}
        else:
            response = r.body()
            app.logger.debug(f'Got response from forwarder: {response}')
    except Exception as e:
        response = {'status': 'Failed',
                    'code': 520,
                    'reason': f'Contacting forwarder failed with {e}'}
    return jsonify(response)

####################
	Base Output
####################
def get_stats_from_forwarder(forwarder_address="http://34.207.74.221:8080"):
    """ Get stats from the forwarder
    """
    app.logger.debug(f"Getting stats from forwarder")
    try:
        r = requests.get(forwarder_address + '/map.csv')
        if r.status_code != 200:
            response = {'status': 'Failed',
                        'code': r.status_code,
                        'reason': 'Forwarder did not respond with liveness stats'}
        else:
            response = r.text()
            app.logger.debug(f'Got response from forwarder: {response}')
    except Exception as e:
        response = {'status': 'Failed',
                    'code': 520,
                    'reason': f'Contacting forwarder failed with {e}'}
    return jsonify(response)

####################
	Base Generated Output
####################
def get_stats_from_forwarder(forwarder_address="http://34.207.74.221:8080"):
    """ Get stats from the forwarder
    """
    app.logger.debug(f"Getting stats from forwarder")
    try:
        r = requests.get(forwarder_address + '/map.csv')
        if r.status_code != 200:
            response = {'status': 'Failed',
                        'code': r.status_code,
                        'reason': 'Forwarder did not respond with liveness stats'}
        else:
            response = r.text  # Changed from r.body() to r.text
            app.logger.debug(f'Got response from forwarder: {response}')
    except Exception as e:
        response = {'status': 'Failed',
                    'code': 520,
                    'reason': f'Contacting forwarder failed with {e}'}
    return jsonify(response)

####################
	Finetuned Generated Output
####################
def get_stats_from_forwarder(forwarder_address="http://34.207.74.221:8080"):
    """ Get stats from the forwarder
    """
    app.logger.debug(f"Getting stats from forwarder")
    try:
        r = requests.get(forwarder_address + '/map.csv')
        if r.status_code != 200:
            response = {'status': 'Failed',
                        'code': r.status_code,
                        'reason': 'Forwarder did not respond with liveness stats'}
        else:
            response = r.text
            app.logger.debug(f'Got response from forwarder: {response}')
    except Exception as e:
        response = {'status': 'Failed',
                    'code': 520,
                    'reason': f'Contacting forwarder failed with {e}'}
    return jsonify(response)

